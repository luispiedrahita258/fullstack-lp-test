{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Acción asíncrona para obtener productos del backend\nexport const fetchProducts = createAsyncThunk('product/fetchProducts', async () => {\n  const response = await axios.get('http://localhost:3000/productos');\n  return response.data;\n});\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = 'Cargando';\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.status = 'Cargados';\n      state.products = action.payload;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.status = 'Falla';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchProducts","response","get","data","productSlice","name","initialState","products","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["D:/fullstack-lp-test/frontend/src/features/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Acción asíncrona para obtener productos del backend\r\nexport const fetchProducts = createAsyncThunk('product/fetchProducts', async () => {\r\n  const response = await axios.get('http://localhost:3000/productos');\r\n  return response.data;\r\n});\r\n\r\nconst productSlice = createSlice({\r\n  name: 'product',\r\n  initialState: {\r\n    products: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.status = 'Cargando';\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.status = 'Cargados';\r\n        state.products = action.payload;\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.status = 'Falla';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default productSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,uBAAuB,EAAE,YAAY;EACjF,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,iCAAiC,CAAC;EACnE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC/BQ,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,aAAa,CAACc,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACP,MAAM,GAAG,UAAU;IAC3B,CAAC,CAAC,CACDK,OAAO,CAACb,aAAa,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACP,MAAM,GAAG,UAAU;MACzBO,KAAK,CAACR,QAAQ,GAAGU,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDL,OAAO,CAACb,aAAa,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACP,MAAM,GAAG,OAAO;MACtBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAehB,YAAY,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}