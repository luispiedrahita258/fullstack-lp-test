{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack-lp-test\\\\frontend\\\\src\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\n// Función para validar el número de la tarjeta con el algoritmo Luhn\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validateCardNumber = cardNumber => {\n  let sum = 0;\n  let shouldDouble = false;\n  for (let i = cardNumber.length - 1; i >= 0; i--) {\n    let digit = parseInt(cardNumber[i]);\n    if (shouldDouble) {\n      digit *= 2;\n      if (digit > 9) digit -= 9;\n    }\n    sum += digit;\n    shouldDouble = !shouldDouble;\n  }\n  return sum % 10 === 0;\n};\n\n// Detectar si la tarjeta es VISA o MasterCard\nconst getCardType = cardNumber => {\n  if (/^4/.test(cardNumber)) return \"VISA\";\n  if (/^5[1-5]/.test(cardNumber)) return \"MasterCard\";\n  return \"Unknown\";\n};\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [cardType, setCardType] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(\"\"); // Estado para mostrar feedback del pago\n\n  useEffect(() => {\n    // Llamada al backend para obtener los productos\n    axios.get(\"http://localhost:3000/productos\").then(response => {\n      setProducts(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching products:\", error);\n    });\n  }, []);\n  const handlePayment = product => {\n    setSelectedProduct(product);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  // Función para manejar la validación del pago\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n\n    // Validar número de tarjeta\n    if (!validateCardNumber(cardNumber)) {\n      newErrors.cardNumber = \"Número de tarjeta inválido\";\n    } else {\n      setCardType(getCardType(cardNumber));\n    }\n\n    // Validar fecha de expiración (Formato MM/YY)\n    if (!/^(0[1-9]|1[0-2])\\/?([0-9]{2})$/.test(expiryDate)) {\n      newErrors.expiryDate = \"Fecha de expiración inválida\";\n    }\n\n    // Validar CVC\n    if (!/^[0-9]{3}$/.test(cvc)) {\n      newErrors.cvc = \"CVC inválido\";\n    }\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length === 0) {\n      // Si no hay errores, procesamos el pago\n      try {\n        const createResponse = await axios.post(\"http://localhost:3000/transacciones/crear\", {\n          productoId: selectedProduct.id,\n          monto: selectedProduct.precio\n        });\n        console.log(\"Transacción creada exitosamente:\", createResponse.data);\n\n        // Aquí hacemos la segunda solicitud para completar la transacción\n        const completeResponse = await axios.post(\"http://localhost:3000/transacciones/completar\", {\n          transaccionId: createResponse.data.id,\n          estado: \"COMPLETADO\" // Marcamos como completado\n        });\n        console.log(\"Transacción completada:\", completeResponse.data);\n\n        // Actualizamos el stock del producto en la lista de productos\n        const updatedProducts = products.map(product => product.id === selectedProduct.id ? {\n          ...product,\n          stock: product.stock - 1\n        } // Restamos 1 al stock\n        : product);\n        setProducts(updatedProducts); // Actualizamos el estado con los productos actualizados\n\n        // Mostrar mensaje de éxito\n        setPaymentStatus(\"Pago procesado exitosamente.\");\n        closeModal();\n      } catch (error) {\n        console.error(\"Error al procesar el pago:\", error);\n        setPaymentStatus(\"Error al procesar el pago.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Productos Disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), paymentStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paymentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: product.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precio: $\", product.precio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stock: \", product.stock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePayment(product),\n          children: \"Pagar con tarjeta de cr\\xE9dito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Pago con tarjeta\",\n      children: selectedProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Pagar \", selectedProduct.nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"N\\xFAmero de Tarjeta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"0000 0000 0000 0000\",\n              value: cardNumber,\n              onChange: e => setCardNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), errors.cardNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.cardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), cardType && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Tipo de tarjeta: \", cardType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Fecha de Expiraci\\xF3n (MM/YY)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"MM/YY\",\n              value: expiryDate,\n              onChange: e => setExpiryDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), errors.expiryDate && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.expiryDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"CVC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"CVC\",\n              value: cvc,\n              onChange: e => setCvc(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), errors.cvc && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.cvc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Realizar Pago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeModal,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"+Y5+kd4YUbVzisU0ttSPFow5d6A=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","validateCardNumber","cardNumber","sum","shouldDouble","i","length","digit","parseInt","getCardType","test","ProductList","_s","products","setProducts","modalIsOpen","setModalIsOpen","selectedProduct","setSelectedProduct","setCardNumber","expiryDate","setExpiryDate","cvc","setCvc","errors","setErrors","cardType","setCardType","paymentStatus","setPaymentStatus","get","then","response","data","catch","error","console","handlePayment","product","closeModal","handleSubmit","e","preventDefault","newErrors","Object","keys","createResponse","post","productoId","id","monto","precio","log","completeResponse","transaccionId","estado","updatedProducts","map","stock","children","fileName","_jsxFileName","lineNumber","columnNumber","nombre","descripcion","onClick","isOpen","onRequestClose","contentLabel","onSubmit","type","placeholder","value","onChange","target","style","color","_c","$RefreshReg$"],"sources":["D:/fullstack-lp-test/frontend/src/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"react-modal\";\r\n\r\n// Función para validar el número de la tarjeta con el algoritmo Luhn\r\nconst validateCardNumber = (cardNumber) => {\r\n  let sum = 0;\r\n  let shouldDouble = false;\r\n\r\n  for (let i = cardNumber.length - 1; i >= 0; i--) {\r\n    let digit = parseInt(cardNumber[i]);\r\n\r\n    if (shouldDouble) {\r\n      digit *= 2;\r\n      if (digit > 9) digit -= 9;\r\n    }\r\n\r\n    sum += digit;\r\n    shouldDouble = !shouldDouble;\r\n  }\r\n\r\n  return sum % 10 === 0;\r\n};\r\n\r\n// Detectar si la tarjeta es VISA o MasterCard\r\nconst getCardType = (cardNumber) => {\r\n  if (/^4/.test(cardNumber)) return \"VISA\";\r\n  if (/^5[1-5]/.test(cardNumber)) return \"MasterCard\";\r\n  return \"Unknown\";\r\n};\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [expiryDate, setExpiryDate] = useState(\"\");\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [cardType, setCardType] = useState(\"\");\r\n  const [paymentStatus, setPaymentStatus] = useState(\"\"); // Estado para mostrar feedback del pago\r\n\r\n  useEffect(() => {\r\n    // Llamada al backend para obtener los productos\r\n    axios\r\n      .get(\"http://localhost:3000/productos\")\r\n      .then((response) => {\r\n        setProducts(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching products:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handlePayment = (product) => {\r\n    setSelectedProduct(product);\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  // Función para manejar la validación del pago\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n\r\n    // Validar número de tarjeta\r\n    if (!validateCardNumber(cardNumber)) {\r\n      newErrors.cardNumber = \"Número de tarjeta inválido\";\r\n    } else {\r\n      setCardType(getCardType(cardNumber));\r\n    }\r\n\r\n    // Validar fecha de expiración (Formato MM/YY)\r\n    if (!/^(0[1-9]|1[0-2])\\/?([0-9]{2})$/.test(expiryDate)) {\r\n      newErrors.expiryDate = \"Fecha de expiración inválida\";\r\n    }\r\n\r\n    // Validar CVC\r\n    if (!/^[0-9]{3}$/.test(cvc)) {\r\n      newErrors.cvc = \"CVC inválido\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      // Si no hay errores, procesamos el pago\r\n      try {\r\n        const createResponse = await axios.post(\r\n          \"http://localhost:3000/transacciones/crear\",\r\n          {\r\n            productoId: selectedProduct.id,\r\n            monto: selectedProduct.precio,\r\n          }\r\n        );\r\n\r\n        console.log(\"Transacción creada exitosamente:\", createResponse.data);\r\n\r\n        // Aquí hacemos la segunda solicitud para completar la transacción\r\n        const completeResponse = await axios.post(\r\n          \"http://localhost:3000/transacciones/completar\",\r\n          {\r\n            transaccionId: createResponse.data.id,\r\n            estado: \"COMPLETADO\", // Marcamos como completado\r\n          }\r\n        );\r\n\r\n        console.log(\"Transacción completada:\", completeResponse.data);\r\n\r\n        // Actualizamos el stock del producto en la lista de productos\r\n        const updatedProducts = products.map((product) =>\r\n          product.id === selectedProduct.id\r\n            ? { ...product, stock: product.stock - 1 } // Restamos 1 al stock\r\n            : product\r\n        );\r\n\r\n        setProducts(updatedProducts); // Actualizamos el estado con los productos actualizados\r\n\r\n        // Mostrar mensaje de éxito\r\n        setPaymentStatus(\"Pago procesado exitosamente.\");\r\n        closeModal();\r\n      } catch (error) {\r\n        console.error(\"Error al procesar el pago:\", error);\r\n        setPaymentStatus(\"Error al procesar el pago.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Productos Disponibles</h1>\r\n      {paymentStatus && <p>{paymentStatus}</p>} {/* Mostrar mensaje de feedback */}\r\n      <ul>\r\n        {products.map((product) => (\r\n          <li key={product.id}>\r\n            <h2>{product.nombre}</h2>\r\n            <p>{product.descripcion}</p>\r\n            <p>Precio: ${product.precio}</p>\r\n            <p>Stock: {product.stock}</p>\r\n            <button onClick={() => handlePayment(product)}>\r\n              Pagar con tarjeta de crédito\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Modal de pago*/}\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Pago con tarjeta\"\r\n      >\r\n        {selectedProduct && (\r\n          <div>\r\n            <h2>Pagar {selectedProduct.nombre}</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <div>\r\n                <label>Número de Tarjeta</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"0000 0000 0000 0000\"\r\n                  value={cardNumber}\r\n                  onChange={(e) => setCardNumber(e.target.value)}\r\n                />\r\n                {errors.cardNumber && (\r\n                  <p style={{ color: \"red\" }}>{errors.cardNumber}</p>\r\n                )}\r\n                {cardType && <p>Tipo de tarjeta: {cardType}</p>}\r\n              </div>\r\n              <div>\r\n                <label>Fecha de Expiración (MM/YY)</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"MM/YY\"\r\n                  value={expiryDate}\r\n                  onChange={(e) => setExpiryDate(e.target.value)}\r\n                />\r\n                {errors.expiryDate && (\r\n                  <p style={{ color: \"red\" }}>{errors.expiryDate}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label>CVC</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"CVC\"\r\n                  value={cvc}\r\n                  onChange={(e) => setCvc(e.target.value)}\r\n                />\r\n                {errors.cvc && <p style={{ color: \"red\" }}>{errors.cvc}</p>}\r\n              </div>\r\n              <button type=\"submit\">Realizar Pago</button>\r\n              <button type=\"button\" onClick={closeModal}>\r\n                Cancelar\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}